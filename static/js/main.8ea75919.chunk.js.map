{"version":3,"sources":["services/UserService.js","services/BitcoinService.js","pages/HomePage.js","services/ContactService.js","cmps/ContactPreview.js","cmps/ContactList.js","cmps/ContactFilter.js","pages/ContantPage.js","pages/ContantDetailsPage.js","cmps/Chart.js","pages/StatisticsPage.js","pages/ContactEditPage.js","App.js","serviceWorker.js","index.js"],"names":["UserService","getUser","name","coins","moves","_callee","res","rate","regenerator_default","a","wrap","_context","prev","next","axios","get","sent","data","abrupt","stop","getMarketPrice","_callee2","marketPrice","_context2","values","_callee3","_context3","BitcoinService","getRate","getConfirmedTransactions","HomePage","state","user","this","setState","react_default","createElement","className","Component","ContactService","getContacts","filterBy","arguments","length","undefined","Promise","resolve","reject","term","contactsToReturn","contacts","toLocaleLowerCase","filter","contact","includes","phone","email","sort","b","getContactById","id","find","_id","concat","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","txt","possible","i","charAt","Math","floor","random","_makeId","push","_addContact","getEmptyContact","ContactPreview","props","react_router_dom","to","alt","src","ContactList","contactList","map","key","cmps_ContactPreview","ContactFilter","onChange","type","ContactPage","users","usersToShow","event","target","value","console","log","_this","cmps_ContactFilter","cmps_ContactList","ContactDetails","match","params","Charts","priceArray","transactionsArray","forEach","y","transactions","build","style","strokeWidth","stroke","fill","StatisticsPage","bitcoinService","Chart","ContactEdit","redirectToDetailes","redirectToContacts","handleChange","field","ev","Object","objectSpread","defineProperty","preventDefault","contactService","userId","react_router","button","onClick","onSubmit","defaultValue","Links","exact","activeClassName","App","App_Links","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ea75919.chunk.js","sourcesContent":["\r\nfunction getUser(){\r\n    return {\r\n        name:'talos',\r\n        coins:100,\r\n        moves:[]\r\n    }\r\n}\r\n\r\nexport default {\r\n    getUser\r\n}","\r\nimport axios from 'axios'\r\n\r\nasync function getRate() {\r\n   const res = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1')\r\n   const rate = res.data\r\n   return rate\r\n}\r\ngetMarketPrice()\r\nasync function getMarketPrice() {\r\n   const res = await axios.get('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true')\r\n   const marketPrice = res.data.values\r\n   return marketPrice\r\n}\r\nasync function getConfirmedTransactions() {\r\n   const res = await axios.get(`https://api.blockchain.info/charts/n-transactions?timespan=50days&format=json&cors=true`)\r\n   return res.data.values\r\n}\r\n\r\nexport default {\r\n   getRate,\r\n   getMarketPrice,\r\n   getConfirmedTransactions\r\n}","import React, { Component } from 'react';\r\nimport UserService from '../services/UserService'\r\nimport BitcoinService from '../services/BitcoinService'\r\nclass HomePage extends Component {\r\n    state = {\r\n        user: {}, rate: null\r\n    }\r\n    async componentDidMount() {\r\n        const rate = await BitcoinService.getRate()\r\n        const user = await UserService.getUser()\r\n        this.setState({rate,user})\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"home-container\">\r\n                <h1>Mr BitCoin- Home Page</h1>\r\n                <h2>Hello '{this.state.user.name}' </h2>\r\n                you currently have {this.state.user.coins} Bitcoins!\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default HomePage\r\n","export default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\n\n\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\", \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\", \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\", \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\", \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\", \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\", \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\", \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\", \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\", \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\", \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\", \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\", \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\", \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\", \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\", \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\", \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\", \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter( contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n           contact.phone.toLocaleLowerCase().includes(term) ||\n           contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\n\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst ContactPreview = (props) => {\r\n    return (\r\n        <section className=\"preview-container\">\r\n            <Link to={`/contacts/${props.contact._id}`}>\r\n                <div className=\"img-container\"><img alt='' src={`https://robohash.org/${props.contact.name}?set=set3&size=100x100 `} /></div>\r\n                <h2>{props.contact.name}</h2>\r\n                <h2>Phone: {props.contact.phone}</h2>\r\n                <h2>Email: {props.contact.email}</h2>\r\n            </Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ContactPreview\r\n\r\nContactPreview.propTypes = {\r\n    contact: PropTypes.object,\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ContactPreview from './ContactPreview'\r\n\r\n\r\n\r\nconst ContactList = (props) => {\r\n\r\n    const contactList =\r\n        props.contacts.map(contact =>\r\n            (\r\n                <li key={contact._id}>\r\n                    <ContactPreview contact={contact} />\r\n                </li>)\r\n        );\r\n\r\n    return (\r\n        <section>\r\n            <ul>\r\n                {\r\n                    contactList\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\nexport default ContactList\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst ContactFilter = (props) => {\r\n\r\nlet handleChange=(event)=>{\r\nlet txt = event.target.value\r\nprops.filter(txt)\r\n}\r\n\r\n    return (\r\n        <section>\r\n                <h1>filter</h1>\r\n                <input onChange={props.filter} type=\"text\" />\r\n                {/* <input onChange={handleChange} type=\"text\" /> */}\r\n        </section>\r\n    )\r\n}\r\nexport default ContactFilter\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ContactService from '../services/ContactService'\r\nimport ContactList from '../cmps/ContactList'\r\nimport ContactFilter from '../cmps/ContactFilter'\r\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\r\n\r\nclass ContactPage extends Component {\r\n    state = {\r\n        users: [],\r\n        usersToShow: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let users = await ContactService.getContacts()\r\n        this.setState({ users })\r\n        this.filter()\r\n    }\r\n    filter = (event) => {\r\n        let txt = ''\r\n        if (!event) txt = ''\r\n        else txt = event.target.value\r\n        console.log(event);\r\n\r\n        this.setState({\r\n            usersToShow: this.state.users.filter((contact) => {\r\n                return contact.name.includes(txt) ||\r\n                    contact.phone.includes(txt) ||\r\n                    contact.email.includes(txt)\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section >\r\n                <h1>contact page</h1>\r\n                <NavLink to={`/contacts/edit`}>add user</NavLink>\r\n                <ContactFilter\r\n                    filter={this.filter}></ContactFilter>\r\n                <ContactList contacts={this.state.usersToShow}></ContactList>\r\n\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactPage","import React, { Component } from 'react';\r\nimport ContactService from '../services/ContactService'\r\nimport ContactPreview from '../cmps/ContactPreview'\r\nimport {NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nclass ContactDetails extends Component {\r\n    state = {\r\n        user: {}\r\n    }\r\n    async componentDidMount() {\r\n        let user = await ContactService.getContactById(this.props.match.params.id)\r\n        this.setState({ user })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <h1>Contact Details!</h1>\r\n\r\n                <ContactPreview contact={this.state.user}></ContactPreview>\r\n    <NavLink  to={`/contacts/edit/${this.state.user._id}`}>Edit user</NavLink> |\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default ContactDetails","import React from 'react';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\nconst Charts = (props) =>{\r\n    var priceArray = []\r\n    var transactionsArray = []\r\n    props.marketPrice.forEach((value) => {\r\n        priceArray.push(value.y)\r\n    })\r\n    props.transactions.forEach((value) => {\r\n        transactionsArray.push(value.y)\r\n    })\r\n\r\n    return (\r\n        <section>\r\n            <h1>hello</h1>\r\n            <h1>market prices over 50 days:</h1>\r\n            <h3>start: {priceArray[0]}</h3>\r\n            <h3>finish:{priceArray[priceArray.length - 1]}</h3>\r\n            <Sparklines data={priceArray} >\r\n                <SparklinesLine style={{ strokeWidth: 3, stroke: \"#336aff\", fill: \"none\" }} />\r\n            </Sparklines>}\r\n                <h1>market transactions over 50 days:</h1>\r\n            <h3>start: {transactionsArray[0]}</h3>\r\n            <h3>finish:{transactionsArray[transactionsArray.length - 1]}</h3>\r\n            {<Sparklines data={transactionsArray} >\r\n                <SparklinesLine style={{ strokeWidth: 3, stroke: \"#430aff\", fill: \"none\" }} />\r\n            </Sparklines>}\r\n        </section>\r\n    )\r\n}\r\nexport default Charts\r\n\r\n","import React, { Component } from 'react';\r\nimport Charts from '../cmps/Chart'\r\nimport bitcoinService from '../services/BitcoinService'\r\nclass StatisticsPage extends Component {\r\n\r\n    state = {\r\n        marketPrice: null,\r\n        transactions: null\r\n    }\r\n    async componentDidMount() {\r\n        let marketPrice = await bitcoinService.getMarketPrice()\r\n        let transactions = await bitcoinService.getConfirmedTransactions()\r\n        this.setState({ marketPrice, transactions })\r\n        console.log(this.state.marketPrice);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n\r\n                <h1>StatisticsPage!</h1>\r\n                {this.state.transactions && this.state.marketPrice &&\r\n                 <Charts\r\n                  transactions={this.state.transactions}\r\n                    marketPrice={this.state.marketPrice} \r\n                    >\r\n                    </Charts>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default StatisticsPage","import React, { Component } from 'react';\r\nimport { Redirect, NavLink} from 'react-router-dom'\r\nimport contactService from '../services/ContactService'\r\n// import { log } from 'util';\r\n// import { async } from 'q';\r\nclass ContactEdit extends Component {\r\n    state = {\r\n        user: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        },\r\n        redirectToDetailes: false,\r\n        redirectToContacts:false\r\n    }\r\n\r\n    async  componentDidMount() {\r\n        let userId = this.props.match.params.id\r\n        if (userId) {\r\n            let user = await contactService.getContactById(userId)\r\n            this.setState({ user })\r\n        }\r\n    }\r\n    handleChange = (field) => {\r\n        return ev => {\r\n            const user = { ...this.state.user, [field]: ev.target.value }\r\n            this.setState({ user });\r\n        }\r\n    }\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault()\r\n      await  contactService.saveContact(this.state.user)\r\n                this.setState({ redirectToDetailes: true });\r\n    }\r\n    deleteContact = async(ev) => {\r\n       await contactService.deleteContact(this.state.user._id)\r\n            this.setState({redirectToContacts:true})\r\n    }\r\n    render() {\r\n        if (this.state.redirectToDetailes) {\r\n            return <Redirect to={`/contacts/${this.state.user._id}`} />\r\n        }\r\n        if (this.state.redirectToContacts) {\r\n            return <Redirect to={`/contacts`} />\r\n        }\r\n        var button;\r\n       if (this.state.user._id) button = <button onClick={this.deleteContact}>🗑Delete🗑</button>\r\n        return (\r\n            <section>\r\n            <NavLink to=\"/contacts\">⬅️</NavLink>\r\n            <form className=\"edit-form\" onSubmit={this.saveContact} >\r\n                Name:  <input className=\"edit-input\"\r\n                    type=\"text\" defaultValue={this.state.user.name || ''} onChange={this.handleChange('name')} />\r\n                Email: <input className=\"edit-input\"\r\n                    type=\"email\" defaultValue={this.state.user.email || ''} onChange={this.handleChange('email')} />\r\n                Phone: <input className=\"edit-input\"\r\n                    type=\"tel\" defaultValue={this.state.user.phone || ''} onChange={this.handleChange('phone')} />\r\n                <button type=\"submit\">Save</button>\r\n                {button}\r\n            </form>\r\n        </section>\r\n        )\r\n    }\r\n}\r\nexport default ContactEdit","import React from 'react';\nimport HomePage from './pages/HomePage'\nimport ContactPage from './pages/ContantPage'\nimport ContactDetails from './pages/ContantDetailsPage'\nimport StatisticsPage from './pages/StatisticsPage'\nimport ContactEdit from './pages/ContactEditPage'\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom'\n\nimport './App.css';\nconst Links = () => (\n  <nav className=\"nav-bar-container\">\n    <NavLink exact activeClassName =\"active\" to=\"/\">Home</NavLink> |\n    <NavLink activeClassName=\"active\" to=\"/contacts\">Contacts</NavLink> | \n    <NavLink activeClassName=\"active\" to=\"/statistics\">statistics</NavLink>\n  </nav>\n)\nfunction App() {\n  return (\n    <Router>\n      <Links/>\n    <div className=\"App\">\n      <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/contacts\" component={ContactPage} />\n      <Route exact path=\"/contacts/edit\" component={ContactEdit} />\n      <Route exact path=\"/contacts/:id?\" component={ContactDetails} />\n\n      <Route exact path=\"/contacts/edit/:id?\" component={ContactEdit} />\n      <Route exact path=\"/statistics\" component={StatisticsPage} />\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}